# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu1804"

  if Vagrant.has_plugin?('vagrant-env')
    config.env.enable
  end

  machine_name = ENV['MACHINE_NAME'] || ("liquid-vagrant-" + `hostname`.strip)
  custom_sh = ENV['PROVISION_SH']

  config.vm.define machine_name
  # disable implicit mount for /vagrant
  config.vm.synced_folder '.', '/vagrant', disabled: true

  # blank provisioner that can be overridden by providers
  config.vm.provision 'provider', type: 'shell', inline: '/bin/true'

  config.vm.provision "shell", inline: "/opt/node/vagrant/provision-liquid.sh"

  if custom_sh
    config.vm.provision :shell, path: custom_sh
  end

  #config.vm.network :forwarded_port, guest: 80  , guest_ip: "10.66.60.1", host: 1380,  host_ip: "127.0.0.1"
  #config.vm.network :forwarded_port, guest: 4646, guest_ip: "10.66.60.1", host: 14646, host_ip: "127.0.0.1"
  #config.vm.network :forwarded_port, guest: 8500, guest_ip: "10.66.60.1", host: 18500, host_ip: "127.0.0.1"
  #config.vm.network :forwarded_port, guest: 8200, guest_ip: "10.66.60.1", host: 18200, host_ip: "127.0.0.1"

  config.vm.provider :virtualbox do |virtualbox, override|
    virtualbox.memory = 12288
    virtualbox.cpus = 2
    override.vm.provision(
      'provider',
      preserve_order: true,
      type: 'shell',
      path: "provision-cluster.sh",
      inline: nil,
    )
    override.vm.synced_folder "..", "/opt/node"
  end

  config.vm.provider :vmck do |vmck, override|
    vmck.vmck_url = ENV['VMCK_URL']
    override.vm.box = "base"
    override.nfs.functional = false
    override.vm.provision(
      'provider',
      preserve_order: true,
      type: 'shell',
      path: "wait-cluster.sh",
      inline: nil,
    )
    override.vm.synced_folder "..", "/opt/node", type: "rsync",
      rsync__exclude: [".vagrant/", ".git/", "__pycache__/",
                       "venv/", "volumes/", "collections/"]
  end
end
