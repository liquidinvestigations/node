{% from '_lib.hcl' import shutdown_delay, authproxy_group, group_disk, task_logs, continuous_reschedule with context -%}

job "nextcloudpublic" {
  datacenters = ["dc1"]
  type = "service"
  priority = 98

  group "nextcloudpublic" {
    ${ group_disk() }
    ${ continuous_reschedule() }

    task "nextcloudpublic" {
      ${ task_logs() }

      constraint {
        attribute = "{% raw %}${meta.liquid_volumes}{% endraw %}"
        operator = "is_set"
      }
      constraint {
        attribute = "{% raw %}${meta.liquid_collections}{% endraw %}"
        operator = "is_set"
      }

      driver = "docker"
      config {
        image = "${config.image('liquid-nextcloudpublic')}"
        volumes = [
          "{% raw %}${meta.liquid_volumes}{% endraw %}/nextcloudpublic/nextcloud/data:/var/www/html/data",
          "{% raw %}${meta.liquid_volumes}{% endraw %}/nextcloudpublic/nextcloud/config:/var/www/html/config",
          "{% raw %}${meta.liquid_volumes}{% endraw %}/nextcloudpublic/nextcloud/themes:/var/www/html/themes",
          "{% raw %}${meta.liquid_collections}{% endraw %}/uploads/data:/var/www/html/data/uploads/files",
        ]
        args = ["/bin/bash", "/local/start.sh"]
        port_map {
          http = 80
        }
        labels {
          liquid_task = "nextcloudpublic"
        }
        memory_hard_limit = ${3 * config.nextcloudpublic_memory_limit}
      }
      resources {
        cpu = 200
        memory = ${config.nextcloudpublic_memory_limit}
        network {
          mbits = 1
          port "http" {}
        }
      }
      env {
        NEXTCLOUD_PUBLIC_URL = "${config.liquid_http_protocol}://nextcloudpublic.${config.liquid_domain}"
        LIQUID_TITLE = "${config.liquid_title}"
        LIQUID_CORE_URL = "${config.liquid_core_url}"
      }
      template {
        data = <<-EOF
        HTTP_PROTO = "${config.liquid_http_protocol}"
        NEXTCLOUD_HOST = "nextcloudpublic.{{ key "liquid_domain" }}"
        NEXTCLOUD_ADMIN_USER = "admin"
        NEXTCLOUD_ADMIN = "admin"
        {{- with secret "liquid/nextcloudpublic/nextcloud.admin" }}
          NEXTCLOUD_ADMIN_PASSWORD = {{.Data.secret_key | toJSON }}
        {{- end }}
        MYSQL_HOST = "{{ env "attr.unique.network.ip-address" }}:${config.port_nextcloudpublic_maria}"
        MYSQL_DB = "nextcloudpublic"
        MYSQL_USER = "nextcloudpublic"
        {{- with secret "liquid/nextcloudpublic/nextcloud.maria" }}
          MYSQL_PASSWORD = {{.Data.secret_key | toJSON }}
        {{- end }}
        {{- with secret "liquid/nextcloudpublic/nextcloud.uploads" }}
          UPLOADS_USER_PASSWORD = {{.Data.secret_key | toJSON }}
        {{- end }}
        EOF
        destination = "local/nextcloudpublic-migrate.env"
        env = true
      }
      template {
        data = <<EOF
# Auto-generated by nextcloud migrate script
{% include 'nextcloudpublic-setup.sh' %}
        EOF
        destination = "local/setup.sh"
        perms = "755"
      }

      template {
        data = <<-EOF
          #!/bin/bash
          set -ex

          echo "0/4 nextcloud public setup"
          # hack: trigger nextcloud entrypoint (it checks if its $1 begins with 'apache'
          /entrypoint.sh apache2-foreground -v

          echo "1/4 exec setup"
          chown -R 33:33 /var/www/html/
          echo chown done

          echo "2/4 exec setup"
          sudo -Eu www-data bash /local/setup.sh

          echo "3/4 start periodic"
          (
            while true; do
              sleep 300
              echo "rescanning files..."
              sudo -Eu www-data php occ files:scan --all
              sleep 3600
            done
          ) &

          echo "4/4 start server"
          exec  /entrypoint.sh apache2-foreground
        EOF
        destination = "local/start.sh"
        perms = "755"
      }

      service {
        name = "nextcloudpublic-app"
        port = "http"
        tags = ["fabio-:${config.port_nextcloudpublic} proto=tcp"]
        check {
          name = "http"
          initial_status = "critical"
          type = "http"
          path = "/status.php"
          interval = "${check_interval}"
          timeout = "${check_timeout}"
          header {
            Host = ["nextcloudpublic.${liquid_domain}"]
          }
        }
      }
    }
  }
}
